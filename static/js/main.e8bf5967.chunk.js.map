{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweets.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","console","log","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","Navigation","to","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","get","updateProfile","signOut","push","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8bf5967.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD41ocZYgAojWegeNf6-v-z5hmTVdAKdus\",\n  authDomain: \"nwitter-477fa.firebaseapp.com\",\n  databaseURL: \"https://nwitter-477fa-default-rtdb.firebaseio.com\",\n  projectId: \"nwitter-477fa\",\n  storageBucket: \"nwitter-477fa.appspot.com\",\n  messagingSenderId: \"621862957734\",\n  appId: \"1:621862957734:web:4af243679ad75963317a67\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\nconst storage = firebase.storage();\n\nexport { firebase, auth, db, storage }","import React, {useState} from \"react\";\r\nimport { auth } from \"../fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n          target: { name, value },\r\n        } = event;\r\n        console.log(name, value);\r\n        if (name === \"email\") {\r\n          setEmail(value);\r\n        } else if (name === \"password\") {\r\n          setPassword(value);\r\n        }\r\n      };\r\n      const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(email, password);\r\n        try {\r\n          let data;\r\n          if (newAccount) {\r\n            console.log(\"create user\");\r\n            data = await auth.createUserWithEmailAndPassword(\r\n              email,\r\n              password\r\n            );\r\n          } else {\r\n            console.log(\"log in\");\r\n            data = await auth.signInWithEmailAndPassword(email, password);\r\n          }\r\n          console.log(data);\r\n        } catch (error) {\r\n          setError(error.message);\r\n        }\r\n      };\r\n      const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n                value={email}\r\n                onChange={onChange}\r\n                />\r\n                <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                value={password}\r\n                onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n            </form>\r\n            {error}\r\n            <div onClick={toggleAccount}> \r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AuthForm","import React, { useState } from \"react\";\nimport { firebase, auth } from \"../fbase\";\nimport AuthForm from \"../components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const name = event.target.name;\n    let provider;\n    if(name === \"google\"){\n      provider = new firebase.auth.GoogleAuthProvider();\n    }else if(name === \"github\"){\n      provider = new firebase.auth.GithubAuthProvider();\n    }\n    const data = await auth.signInWithPopup(provider);\n    console.log(data);\n  }\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n        <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, {useState} from \"react\";\r\nimport { db, storage } from \"../fbase\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok){\r\n            await db.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storage.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await db.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const value = event.target.value;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            onChange={onChange}\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Update Nweet\"\r\n                        />\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl !== \"\" && \r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />}\r\n                    {isOwner && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                            <button onClick={toggleEditing}>Edit Nweet</button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport { db, storage } from \"../fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const fileRef = storage.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await fileRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n        await db.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n    const onChange = (event) => {\r\n        const value = event.target.value;\r\n        setNweet(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        const files = event.target.files;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            setAttachment(finishedEvent.currentTarget.result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => setAttachment(null);\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\" placeholder=\"What's on your mind?\" maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NweetFactory;","import React, {useEffect, useState} from \"react\";\nimport { db, storage } from \"../fbase\";\nimport Nweet from \"../components/Nweets\";\nimport NweetFactory from \"../components/NweetFactory\";\n\nconst Home = ({userObj}) => {\n    const [nweets, setNweets] = useState([]);\n    useEffect(() => {\n        // getNweets();\n        // collection에 add될때 순서대로 쌓이지 않는다.\n        // 따라서 출력하기 전에 orderBy를 사용해서 정렬해주자!\n        db.collection(\"nweets\").orderBy(\"createdAt\", \"desc\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map((doc) => {\n                return ({\n                    id: doc.id,\n                    ...doc.data(),\n                });\n            });\n            setNweets(nweetArray);\n        });\n    }, []);\n    return (\n        <div>\n            <NweetFactory userObj={userObj}/>\n            <div>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\nexport default Home;\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Navigation = ({userObj}) => <nav>\r\n    <ul>\r\n        <li>\r\n            <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\nexport default Navigation;","import React, { useState, useEffect } from \"react\";\nimport { auth, db } from \"../fbase\"\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({userObj, refreshUser}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        auth.signOut();\n        history.push(\"/\");\n    }\n    const getMyNweets = async() => {\n        const nweets = await db.collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .get();\n        console.log(nweets.docs.map((doc) => doc.data()));\n    }\n    useEffect(() => {\n        getMyNweets();\n    })\n    const onChange = (event) => {\n        const value = event.target.value;\n        setNewDisplayName(value);\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName){\n            await userObj.updateProfile({\n                displayName: newDisplayName\n            });\n            refreshUser();\n        }\n    }\n    return (\n        <>\n        <form onSubmit={onSubmit}>\n            <input\n                type=\"text\"\n                placeholder=\"Display name\"\n                onChange={onChange}\n                value={newDisplayName}\n            />\n            <input\n                type=\"submit\"\n                value=\"Update Profile\"    \n            />\n        </form>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    );\n}\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"../routes/Profile\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj}/>}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile\n                userObj={userObj} \n                refreshUser={refreshUser}  \n              />\n            </Route>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { auth } from \"../fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n      }else{\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = auth.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  }\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          userObj={userObj}\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}/>\n      ) : (\n        \"Initializing\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}